pipeline {
    agent any
 
    environment {
        S3_BUCKET = 'my-s3-bucket-for-jenkins-pipeline-setup1'
        S3_KEY = 'my-app.zip'
        ENVIRONMENT_NAME = 'Bean-pro-env'
        APPLICATION_NAME = 'bean-pro'
        AWS_REGION = 'us-east-1'
        VERSION_LABEL = "app-version-${BUILD_NUMBER}"
    }
 
    stages {
        stage('Retrieve AWS Credentials') {
            steps {
                withAWS(credentials: 'aws-credentials', region: "${AWS_REGION}") {
                    echo "AWS credentials loaded successfully."
                }
            }
        }
 
        stage('Checkout') {
            steps {
                git url: 'https://github.com/ShaikAliyaUmmar/s3_creation.git', branch: 'main'
            }
        }
 
        stage('Create Application Zip') {
            steps {
                sh 'zip -r application.zip ./path-to-your-app/*'  // Update with your app's path
            }
        }
 
        stage('Verify File Exists') {
            steps {
                sh 'ls -la'  // To verify the application.zip file is created
            }
        }
 
        stage('Upload to S3') {
            steps {
                sh "aws s3 cp application.zip s3://${S3_BUCKET}/${S3_KEY} --region ${AWS_REGION}"
            }
        }
 
        stage('Create Application Version') {
            steps {
                sh """
                    aws elasticbeanstalk create-application-version \
                    --application-name ${APPLICATION_NAME} \
                    --version-label ${VERSION_LABEL} \
                    --source-bundle S3Bucket=${S3_BUCKET},S3Key=${S3_KEY} \
                    --region ${AWS_REGION}
                """
            }
        }
 
        stage('Update Elastic Beanstalk Environment') {
            steps {
                sh """
                    aws elasticbeanstalk update-environment \
                      --application-name ${APPLICATION_NAME} \
                      --environment-name ${ENVIRONMENT_NAME} \
                      --version-label ${VERSION_LABEL} \
                      --region ${AWS_REGION}
                """
            }
        }
    }
 
    post {
        success {
            echo 'Deployment process completed successfully.'
        }
        failure {
            echo 'Deployment process failed. Please check the logs for more details.'
        }
    }
}
